name: Terraspace Apply

# Default: Manually trigger. Please change to other events if needed
on:
  workflow_dispatch:
    inputs:
      target_env:
        description: "Set TS_ENV to execute Terraspace"
        required: true
        type: choice
        options: # Add more environment if needed
          - demo
jobs:
  apply:
    name: Terraspace
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.target_env }}
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      TS_ENV: ${{ github.event.inputs.target_env }}

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: infra

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.1"

      - name: Install Terraform and Terraspace
        run: |
          brew install tfenv
          tfenv install
          bundle install

      - name: Check Versions
        run: |
          terraspace --version
          terraform --version

      - name: Decode/Retrieve terraform.tfvars from Secrets
        run: |
          echo "${{ secrets.TERRAFORM_TFVARS }}" | base64 --decode > terraform.tfvars
        working-directory: ./infra/config/terraform

      # NOTE: Apply infrastructure changes without approval.
      - name: Apply
        run: |
          terraspace up demo -y
